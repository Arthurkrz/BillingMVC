@model List<BillViewModel>

@{
    var model = Model.FirstOrDefault();
    var successMessage = TempData["SuccessMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div id="successAlert" class="alert alert-success"
         role="alert"
         style="position: fixed; top: 20px; left: 50%; 
         transform: translateX(-50%); max-width: 500px; z-index: 1050;">
        <div style="text-align: center;">@successMessage</div>

        <div class="progress mt-2" style="height: 6px;">
            <div id="successProgressBar"
                 class="progress-bar progress-bar-animated"
                 role="progressbar"
                 style="width: 0%;">
            </div>
        </div>
    </div>

    <script>
        const displayTime = 3000;
        const progressBar = document.getElementById('successProgressBar');
        const alertBox = document.getElementById('successAlert');

        function animateProgress() {
            let startTime = Date.now();

            const timer = setInterval(function () {
                let elapsed = Date.now() - startTime;
                let progress = Math.min(elapsed / displayTime, 1) * 100;

                progressBar.style.width = progress + '%';

                if (progress >= 100) {
                    clearInterval(timer);

                    setTimeout(() => {
                        alertBox.style.transition = 'opacity 0.5s';
                        alertBox.style.opacity = '0';
                        setTimeout(() => alertBox.style.display = 'none', 500);
                    }, 500);
                }
            }, 50);
        }

        animateProgress();
    </script>
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="m-0" style="font-size: 16px;">
            Total de @Model.Count() @(Model.Count() == 1? "despesa" : "despesas")
        </h1>
        <h1 id="totalAmount" class="mt-3" 
            style="font-size: 18px; font-weight: bold;"></h1>
        <div>
            <a class="btn btn-primary me-2" 
               asp-action="Filter" asp-controller="Bill">Busca</a>
            <a id="addBillButton" class="btn btn-success text-white" 
               data-bs-toggle="modal" 
               data-bs-target="#createBillModal">Adicionar Despesa</a>
        </div>
    </div>
</div>

<div class="container">
    <partial name="_BillTable" model="Model" />
</div>

<partial name="_CreateModal" model="new BillViewModel()" />

<div class="d-flex align-items-center mt-1">
    <label for="currencySelect" style="margin-left: 15px;" 
           class="me-2 mb-0">Exibir total em:</label>
    <select id="currencySelect" class="form-select w-auto">
        <option value="BRL" selected>Reais (R$)</option>
        <option value="EUR">Euros (€)</option>
    </select>
</div>

<script>
    $(document).ready(function () {
        if (typeof jQuery === "undefined") {
            console.error("jQuery is not loaded!");
            return;
        }

        const totalInReais = parseFloat
            ('@ViewBag.TotalInReais.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)') || 0;
        const totalInEuros = parseFloat
            ('@ViewBag.TotalInEuros.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)') || 0;
        const totalAmountElement = document.getElementById('totalAmount');
        const currencySelect = document.getElementById('currencySelect');

        function updateTotalDisplay(currency) {
            if (!totalAmountElement) return;
            if (currency === 'BRL') {
                totalAmountElement.innerHTML =
                    `Valor Total das Despesas - R$ ${totalInReais.toFixed(2)}`;
            } else if (currency === 'EUR') {
                totalAmountElement.innerHTML =
                    `Valor Total das Despesas - € ${totalInEuros.toFixed(2)}`;
            }
        }

    if (currencySelect) {
        currencySelect.value = 'BRL';
        updateTotalDisplay('BRL');
        currencySelect.addEventListener('change', function () {
            updateTotalDisplay(this.value);
        });
    }

    $('#createBillModal').on('hidden.bs.modal', function () {
        setTimeout(function () {
            $("#addBillButton").focus();
        }, 100);
    });
});
</script>

<script>
    function enableValidation() {
        var form = $("#createBillForm");
        if (form.length === 0) {
            console.error("Form not found.");
        }
        $.validator.unobtrusive.parse(form);
    }

    enableValidation();

    $(document).on("click", "#saveBillButton", function (e) {
        e.preventDefault();

        let form = $("#createBillForm");
        if (form.length === 0) {
            console.error("Form not found.");
            return
        }

        form.validate();

        if (!form.valid()) {
            console.warn("Form validation failed.");
            return;
        }

        $.ajax({
            url: "@Url.Action("Create", "Bill")",
            type: "POST",
            data: form.serialize(),
            success: function (response) {
                if (response.success) {
                    $("#createBillModal").modal("hide");
                    location.reload();
                } else {
                    let errorContainer = $("#errorMessages");
                    x
                    if (response.errors && response.errors.length > 0) {
                        errorContainer.html(response.errors.join("<br>"));
                        errorContainer.removeClass("d-none").show();
                    } else {
                        errorContainer.html("Erro desconhecido.");
                        errorContainer.removeClass("d-none").show();
                    }
                }
            },
            error: function () {
                let errorContainer = $("#errorMessages");
                errorContainer.html("Erro ao processar solicitação.");
                errorContainer.removeClass("d-none").show();
            }
        });
    });
</script>

<script>
    $(document).on("click", "[id^='saveEditButton-']", function (e) {
        e.preventDefault();

        let buttonId = $(this).attr("id");
        let billId = buttonId.replace("saveEditButton-", "");

        let form = $("#editBillForm-" + billId);

        form.validate();

        if (!form.valid()) {
            return;
        }

        $.ajax({
            url: "@Url.Action("Update", "Bill")",
            type: "POST",
            data: form.serialize(),
            success: function (response) {
                if (response.success) {
                    $("#editModal-" + billId).modal("hide");
                    location.reload();
                } else {
                    $("#editErrorMessages-" + billId)
                        .html(response.errors.join("<br>"))
                        .removeClass("d-none").show();
                }
            },
            error: function () {
                $("#editErrorMessages-" + billId)
                    .html("Erro ao processar solicitação.")
                    .removeClass("d-none").show();
            }
        });
    });
</script>